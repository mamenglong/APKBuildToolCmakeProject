#!/usr/bin/env bash

function find_real_path() {
    file_path="${1}"
    while [ -h "${file_path}" ]; do
        new_file_path=$(/bin/ls -ld "${file_path}")
        new_file_path=$(expr "${new_file_path}" : ".* -> \(.*\)$")
        if expr "x${new_file_path}" : 'x/' >/dev/null; then
            file_path="${new_file_path}"
        else
            file_parent_path=$(dirname "${file_path}")
            dir_pafile_pathth="${file_parent_path}/${new_file_path}"
        fi
    done
    echo "${file_path}"
}

prog=$(find_real_path "$0")

oldwd=$(pwd)
progdir=$(dirname "${prog}")
cd "${progdir}"
progdir=$(pwd)
prog="${progdir}"/$(basename "${prog}")
libdir="${progdir}/../lib"
cd "${libdir}"
libdir=$(pwd)
cd "${oldwd}"

jarfile="${libdir}/$1"
if [ ! -r "${jarfile}" ]; then
    echo $(basename "$prog")": can't find ${jarfile}"
    exit 1
fi

javaOpts=""
javaOpts="-Xmx512M -Dfile.encoding=utf-8"
while expr "x$1" : 'x-J' >/dev/null; do
    opt=$(expr "$1" : '-J\(.*\)')
    javaOpts="${javaOpts} -${opt}"
    shift
done

if [ "$OSTYPE" = "cygwin" ]; then
    jarpath=$(cygpath -w "${jarfile}")
else
    jarpath="${jarfile}"
fi

PATH=$PATH:$(pwd)
export PATH
exec java $javaOpts -Djava.awt.headless=true -jar "$jarpath" "${@:2} "
